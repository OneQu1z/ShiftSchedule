from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import ContextTypes

from src.bot.handlers import (
    show_schedule,
    add_slots,
    help_command, start_shift_exchange
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é.
    """
    try:
        user_manager = context.bot_data['user_manager']
        chat_id = update.effective_chat.id
        username = update.effective_user.username or "–Ω–µ —É–∫–∞–∑–∞–Ω"
        full_name = update.effective_user.full_name or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç)
        is_new_user = user_manager.save_user(chat_id, username, full_name)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ–∂–∏–¥–∞—é—â–∏–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è
        user_manager.save_pending_user(chat_id)

        if is_new_user:
            response = (
                f"‚úÖ –í—ã –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É –±–æ—Ç–∞.\n\n"
                f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
                f"ID: {chat_id}\n"
                f"–û–∂–∏–¥–∞–π—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
            )
            await update.message.reply_text(response)
        else:
            user_info = user_manager.get_user_info(chat_id)
            status = "–æ–¥–æ–±—Ä–µ–Ω" if user_info.get('approved') else "–æ–∂–∏–¥–∞–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è"

            response = (
                f"‚ÑπÔ∏è –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
                f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
                f"ID: {chat_id}\n"
                f"–°—Ç–∞—Ç—É—Å: {status}"
            )
            await update.message.reply_text(response)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é (–∏–∑ user_menu.py)
        keyboard = [
            ["üìÖ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"],
            ["‚ûï –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–º–µ–Ω"],
            ["üîÑ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –æ–±–º–µ–Ω —Å–º–µ–Ω–∞–º–∏"],
            ["üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –§–ò–û"],
            ["‚Ñπ –ü–æ–º–æ—â—å"]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /start: {e}", exc_info=True)
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –í user_menu.py
async def handle_user_menu_selection(update, context):
    text = update.message.text

    if text == "üìÖ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
        await show_schedule(update, context)
    elif text == "‚ûï –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–º–µ–Ω":
        await add_slots(update, context)
    elif text == "üîÑ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –æ–±–º–µ–Ω —Å–º–µ–Ω–∞–º–∏":
        await start_shift_exchange(update, context)  # –¢–µ–ø–µ—Ä—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ
    elif text == "üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –§–ò–û":
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /set_fio –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
        )
    elif text == "‚Ñπ –ü–æ–º–æ—â—å":
        await help_command(update, context)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.")
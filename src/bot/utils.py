import os
import pandas as pd
from telegram.ext import ContextTypes

from src.core.google_utils import GoogleSheetsManager
from src.core.scheduler import generate_schedule, build_schedule_table
from src.core.storage import load_shifts
from src.utils.utils import save_schedule_image
import logging

gs_manager = GoogleSheetsManager()
logger = logging.getLogger(__name__)

async def auto_send_schedule(context: ContextTypes.DEFAULT_TYPE):
    try:
        for chat_id in context.bot_data['user_manager'].load_pen_users():
            try:
                await send_schedule_to_user(chat_id, context)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {chat_id}: {e}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏: {e}")

async def send_schedule_to_user(chat_id, context):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ gs_manager
        data = gs_manager.get_clean_data()
        if not data:
            raise ValueError("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞")

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ DataFrame
        df = pd.DataFrame(data)

        # –û—Å—Ç–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        shifts = load_shifts()
        schedule_data, unfilled = generate_schedule(df, shifts)

        table = build_schedule_table(
            schedule_data,
            df["–§–ò–û"].tolist(),
            {row["–§–ò–û"]: row["–î–Ω–∏"] for row in data}
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        temp_filename = f"temp_schedule_{chat_id}.png"
        save_schedule_image(table, temp_filename)

        caption = "üìÖ –ê–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–º–µ–Ω\n‚úÖ - —Ä–∞–±–æ—Ç–∞–µ—Ç–µ\n‚ùå - –º–æ–≥–ª–∏ –±—ã —Ä–∞–±–æ—Ç–∞—Ç—å\n\n"
        if unfilled:
            caption += "‚ö† –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã —Å–º–µ–Ω—ã:\n" + "\n".join(f"- {day}: {count}" for day, count in unfilled)

        with open(temp_filename, "rb") as photo:
            await context.bot.send_photo(
                chat_id=chat_id,
                photo=photo,
                caption=caption
            )

        os.unlink(temp_filename)

    except Exception as e:
        error_msg = str(e) if str(e) else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è {chat_id}: {error_msg}")
        await context.bot.send_message(
            chat_id=chat_id,
            text=f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {error_msg}"
        )